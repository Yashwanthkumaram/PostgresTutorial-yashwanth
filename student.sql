CREATE TABLE Student (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    usn VARCHAR UNIQUE,
    name VARCHAR(20)
);

CREATE TABLE Scores (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    marks INT CHECK (marks BETWEEN 1 AND 100),
    s_id BIGINT,
    sub_id BIGINT,
    FOREIGN KEY (s_id) REFERENCES Student(id),
    FOREIGN KEY (sub_id) REFERENCES subject(id),

    UNIQUE (s_id,sub_id)    
);

-- ALTER TABLE dbo.Scores
--   ADD CONSTRAINT unique_contraints UNIQUE(column1, column2);

CREATE TABLE Subject (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name VARCHAR(20),
    std_id BIGINT,
    FOREIGN KEY (std_id) REFERENCES Student(id)
);

CREATE TABLE Electives (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    s_id BIGINT,
    sem BIGINT CHECK (sem BETWEEN 1 AND 8) NOT NULL ,
    sub_id BIGINT,
    FOREIGN KEY (s_id) REFERENCES Student(id),
    FOREIGN KEY (sub_id) REFERENCES Subject(id)
);


INSERT INTO Student (usn,  name) VALUES
('USN001', 'ullas'),
('USN002', 'preetham'),
('USN003', 'varsha'),
('USN004', 'jeevan'),
('USN005', 'yashwanth');

INSERT INTO Subject (name, std_id) VALUES
('Math', 1),
('Physics', 1),
('Chemistry', 2),
('Biology', 2),
('Computer Science', 3);

INSERT INTO Scores (marks, s_id,sub_id) VALUES
(85, 1 ,1),
(90, 2, 2),
(70, 3, 3),
(88, 4, 4),
(95, 5, 5);

INSERT INTO Electives (s_id, sem ,sub_id) VALUES
(1, 3, 1),
(2, 4, 2),
(3, 2, 3),
(4, 1, 4),
(5, 5, 5);

-- given a particular sem return all students student name and sem
SELECT DISTINCT s.name, e.sem FROM student s LEFT JOIN Electives e on s.id = e.s_id  WHERE sem =5 ;

-- name     |    sem
-- ullas    |     5
-- yashwanth|     5


-- given a particular usn and sem  return sub name and marks
SELECT s.name, score.marks ,e.sem FROM student s
LEFT JOIN Electives e  on s.id = e.s_id
LEFT JOIN subject sub on  e.sub_id=sub.id 
LEFT JOIN scores score on score.s_id = s.id
WHERE e.sem = 2 and sub.id = 3 ;

--given usn get latest sem marks
SELECT * FROM electives e
LEFT JOIN subject ON e.sub_id = subject.id
LEFT JOIN student s ON e.s_id =  s.id
WHERE s.usn = 'USN001'
ORDER BY e.sem DESC LIMIT 1;

--given usn get latest sem marks
SELECT * FROM electives e
LEFT JOIN subject ON e.sub_id = subject.id
LEFT JOIN student s ON e.s_id =  s.id
WHERE s.usn = 'USN001'
ORDER BY e.sem;

--given usn and sem get that sem's percentage
SELECT *  FROM electives e
LEFT JOIN subject ON e.sub_id = subject.id
LEFT JOIN student s ON e.s_id =  s.id
LEFT JOIN scores sc ON e.sub_id = sc.sub_id and e.s_id =sc.s_id
WHERE s.usn = 'USN005'
;
--given usn and sem get that sem's percentage
SELECT s.name, AVG(marks) FROM electives e
LEFT JOIN subject ON e.sub_id = subject.id
LEFT JOIN student s ON e.s_id =  s.id
LEFT JOIN scores sc ON e.sub_id = sc.sub_id and e.s_id =sc.s_id
WHERE s.usn = 'USN005' and e.sem=5
GROUP BY s.name;

--given usn and sem get that sem's percentage
SELECT  e.sem ,AVG(marks) FROM electives e
LEFT JOIN subject ON e.sub_id = subject.id
LEFT JOIN student s ON e.s_id =  s.id
LEFT JOIN scores sc ON e.sub_id = sc.sub_id and e.s_id =sc.s_id
WHERE s.usn = 'USN005'
GROUP BY e.sem ;

--given usn and sem get that sem's percentage
SELECT  s.name, AVG(marks) as CGPA FROM electives e
LEFT JOIN subject ON e.sub_id = subject.id
LEFT JOIN student s ON e.s_id =  s.id
LEFT JOIN scores sc ON e.sub_id = sc.sub_id and e.s_id =sc.s_id
WHERE s.usn = 'USN005'
GROUP BY s.name


